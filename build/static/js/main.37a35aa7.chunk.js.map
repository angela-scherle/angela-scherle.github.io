{"version":3,"sources":["components/GuessedBirdItem.module.css","components/LifeDisplay.module.css","components/ButtonList.module.css","components/LifeDisplay.js","components/ImageView.js","components/Images.js","components/SkipButton.js","components/FeedbackLine.js","components/ButtonList.js","components/GuessedBirdItem.js","components/GuessedBirds.js","components/TimerView.js","background/TimerLogic.js","pages/QuizPage.js","components/LevelBuilder.js","components/LoseScreen.js","components/WinScreen.js","components/LevelSelectionPreview.js","components/Menu.js","http-common.js","components/quiz.service.js","services/quiz.service.js","pages/EditPageOverview.js","pages/EditLevel.js","pages/AddEntry.js","App.js","index.js"],"names":["module","exports","LifeDisplay","props","state","imagePath","className","this","fillDivWithHearts","lifeCounter","numberOfHearts","heartImgs","i","push","src","alt","nextProps","nextState","nextContext","console","log","React","Component","ImageView","path","class","Images","imageList","index","imageIndex","imagePfad","SkipButton","Button","onClick","onButtonPress","FeedbackLine","feedbackText","ButtonList","createButtonList","items","size","id","buttonIds","text","length","GuessedBirdItem","classes","container","birdList","GuessedBirds","createListOfGuessedBirds","reverse","intId","myTimer","secondsPassed","outOfTime","testNumer","makeAutoObservable","testNumber","setInterval","increaseTimer","decreaseTimer","startDecTimer","birdsLevel1","birdsLevel2","birdsLevel3","MyTimerView","observer","timerV","TimerView","newSeconds","setState","notifyTimeout","clearInterval","setTimer","checkTimerDone","emptyList","LevelBuilder","guessedBirdsList","currentImageIndex","numberOfLives","currentLevel","userFeedback","reasonForLoss","secondsOnTimer","triggerTimeout","indexToSkip","chooseNewRandomImage","goToMenu","buttonIndex","checkAnswer","theButtonIndex","addObjectToGuessedBirdsList","removeObjectFromBirdList","subtractOneLife","reason","setReasonForLoss","newNumber","endLevel","maxIndex","randomNum","randomIntInc","excludedNum","low","high","Math","floor","random","newbirdList","slice","splice","birdObject","newGuessedBirdsList","contentForBirdList","myList","currentBirdList","fillLevel","notifyWin","LoseScreen","loseMessage","restartCurrentLevel","WinScreen","startNextLevel","LevelSelectionPreview","errorMsg","description","levelNumber","disabled","errorMessage","Menu","errMsg1","errMsg2","errMsg3","appTitle","errorMessage1","errorMessage2","errorMessage3","to","claaName","axios","create","baseURL","headers","http","get","userName","data","post","put","delete","title","loadJSON","file","callback","xobj","XMLHttpRequest","overrideMimeType","open","onreadystatechange","readyState","status","responseText","send","QuizPage","level1ErrorMessage","level2ErrorMessage","level3ErrorMessage","playerOutOfHearts","playerOutOfTime","playerGuessedAllBirds","lreason","setLossData","bind","playerHasWon","currentLevelToZero","restartLevel","setCurrentLevel","parseInt","chosenLevel","lossReason","myreasonForLoss","levelNum","myBirdList","thisLevel","numberOfLevel","JSON","parse","QuizDataService","getAll","then","response","catch","e","EditPageOverview","onChangeUsername","onChangePassword","doLogin","username","password","loginDone","htmlFor","type","required","value","onChange","name","role","target","getUser","QuizesList","onChangeSearchTitle","retrieveQuizes","refreshList","setActiveQuiz","removeQuiz","removeAllQuizes","searchTitle","quizes","currentQuiz","currentIndex","quiz","deleteAll","findByTitle","placeholder","map","AddQuiz","onChangeTitle","onChangeDescription","onChangeText","onChangePath","saveQuiz","newQuiz","published","submitted","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37a35aa7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GuessedBirdItem_container__2uJTN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hearts\":\"LifeDisplay_hearts__2XFBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"ButtonList_buttonContainer__2qCrE\"};","import React, { Component } from \"react\";\n\nimport classes from \"./LifeDisplay.module.css\";\n\nconst heartImages = [];\n\nclass LifeDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imagePath: \"images/ui_elements/Heart.png\",\n    };\n  }\n\n  render() {\n    return (\n      <div  className=\"container mt-1 mb-2\">\n        {this.fillDivWithHearts(this.props.lifeCounter)}\n      </div>\n    );\n  }\n\n  fillDivWithHearts(numberOfHearts) {\n    let heartImgs = [];\n    for (let i = 1; i <= numberOfHearts; ++i) {\n      heartImgs.push(<img key={i} src={this.state.imagePath} alt=\"heart\" className=\"col-2 col-sm-2 col-md-2 col-lg-1\"/>);\n    }\n\n    return heartImgs;\n  }\n\n  componentWillUpdate(nextProps, nextState, nextContext) {\n    console.log(\"App.componentWillUpdate() being invoked\");\n    this.fillDivWithHearts(this.props.lifeCounter);\n  }\n}\nexport default LifeDisplay;\n\n//className={classes.hearts}\n","import React, { Component } from \"react\";\r\n \r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nclass ImageView extends React.Component\r\n{  \r\n  constructor( props )\r\n  {\r\n      super( props );\r\n      this.state = {}\r\n      \r\n  }\r\n\r\n  render()\r\n  {\r\n     \r\n     return( \r\n\r\n        <img src={this.props.path} class=\"rounded img-fluid\" alt=\"image not found\"/>\r\n\r\n     );\r\n\r\n  }\r\n  \r\n\r\n  \r\n\r\n}\r\nexport default ImageView;","\nimport React, { Component } from \"react\";\nimport ImageView from \"./ImageView\";\n\n\nclass Images extends React.Component {\n    /***************************************************************************************************************\n    *   Initializes this component by setting the initial state.\n    *\n    *   @param {Object} props The initial properties being passed in the component tag.\n    ***************************************************************************************************************/\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n\n    }\n\n    /***************************************************************************************************************\n    *   Being invoked every time this component renders.\n    *\n    *   @return {JSXTransformer} The rendered JSX.\n    ***************************************************************************************************************/\n    render() {\n        console.log(\"Images.render() being invoked\");\n        if (this.props.imageList != 0) {\n            let index = this.props.imageIndex;\n\n            let imagePfad = this.props.imageList[index].path;\n\n            return (\n                <ImageView\n                    path={imagePfad}\n                />\n            );\n\n        }\n        else {\n            return <div></div>\n        }\n\n    }\n\n\n\n\n}\nexport default Images;\n\n","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nclass SkipButton extends React.Component\n    {\n        constructor( props )\n        {\n            super( props );\n\t\t\tthis.state = {\n                \t\t\n            }\n\t\t\t\n        }\n\t\t\n        render()\n        {\n            return <Button\n            className=\"button btn-sm btn-dark\"\n            onClick={ () => { this.props.onButtonPress(); } }\n            >\n                Vogel überspringen\n            </Button>;\n        }\n    }\n    export default SkipButton;\n","import React, { Component } from \"react\";\n\nimport \"../App.css\";\n\nclass FeedbackLine extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"mt-3\">\n        <p className=\"BiggerText\">{this.props.feedbackText}</p>\n      </div>\n    );\n  }\n}\nexport default FeedbackLine;\n","import React, { Component } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\n\nimport classes from \"./ButtonList.module.css\";\n\nclass ButtonList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    console.log(\"ButtonList.render() being invoked\");\n\n    return (\n      <div className=\"text-center my-3\">\n        {this.createButtonList()}\n      </div>\n    );\n  }\n\n  createButtonList() {\n    console.log(\"ButtonList.createButtonList being invoked\");\n    let items = [];\n\n    for (let index = 0; index < this.props.buttonIds.length; ++index) {\n      items.push(\n        <Button\n          size=\"lg\"\n          className=\"my-2 mx-2 btn-dark\"\n          key={index}\n          id={this.props.buttonIds[index].text}\n          onClick={() => {\n            this.props.onButtonPress(index);\n          }}\n        >\n          {this.props.buttonIds[index].text}\n        </Button>\n      );\n    }\n\n    return items;\n  }\n}\nexport default ButtonList;\n","import React, { Component } from \"react\";\r\nimport ImageView from \"./ImageView\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport classes from \"./GuessedBirdItem.module.css\";\r\nimport \"../App.css\";\r\n\r\nclass GuessedBirdItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.container}>\r\n        <div className=\"col-md-12 mx-1 my-3 row align-middle\">\r\n          <div className=\"col-md-4 col-sm-4 col-xs-4\" >\r\n            <ImageView path={this.props.birdList[this.props.index].path}/>\r\n          </div>\r\n          <div className=\"col-md-8 col-sm-8 col-xs-8 align-middle\">\r\n            <br></br>\r\n            <p className=\"HandwrittenSm text-white align-middle\">{this.props.birdList[this.props.index].text}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default GuessedBirdItem;\r\n\r\n//<img src=\"./images/ui_elements/Background_Website.jpg\" className={classes.backgroundImage}/>","import React, { Component } from \"react\";\n\nimport GuessedBirdItem from \"./GuessedBirdItem\";\n\nimport Container from \"react-bootstrap/Container\";\n\nclass GuessedBirds extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return <div className=\"row\">{this.createListOfGuessedBirds()}</div>;\n  }\n\n  createListOfGuessedBirds() {\n    let items = [];\n    let itemsReversed = [];\n\n    for (let index = 0; index < this.props.birdList.length; ++index) {\n      items.push(\n        <GuessedBirdItem\n          key={this.props.birdList.index}\n          birdList={this.props.birdList}\n          index={index}\n        ></GuessedBirdItem>\n      );\n    }\n    items.reverse();\n\n    return items;\n  }\n}\nexport default GuessedBirds;\n","import React, { Component } from \"react\";\r\n\r\nimport { observer } from \"mobx-react\";\r\nimport TimerLogic from \"../background/TimerLogic\";\r\n\r\nvar intId = 0;\r\n\r\nconst myTimer = new TimerLogic();\r\n//myTimer.secondsPassed = 300;\r\nmyTimer.startDecTimer();\r\n// A function component wrapped with `observer` will react\r\n// to any future change in an observable it used before.\r\nconst MyTimerView = observer(({ timerV }) => (\r\n  <span>Verbleibende Zeit: {timerV.secondsPassed}</span>\r\n));\r\n\r\nclass TimerView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      outOfTime: false,\r\n    };\r\n  }\r\n\r\n\r\n  setTimer(newSeconds) {\r\n    myTimer.secondsPassed = newSeconds;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyTimerView timerV={myTimer} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  checkTimerDone() {\r\n    if (myTimer.secondsPassed <= 0) {\r\n      this.setState({\r\n        outOfTime: true,\r\n\r\n      });\r\n      // also update LevelBuilder\r\n      this.props.notifyTimeout();\r\n      clearInterval(intId);\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    console.log(\"TimerView.componentDidMount() being invoked\");\r\n\r\n    this.setTimer(this.props.secondsPassed);\r\n\r\n    // timer to check mobx timer\r\n    intId = setInterval(() => {\r\n      this.checkTimerDone()\r\n    }, 1000)\r\n\r\n  }\r\n\r\n  compontentDidUpdate() {\r\n    console.log(\"TimerView.componentDidUpdate() being invoked\");\r\n\r\n  }\r\n\r\n\r\n}\r\nexport default TimerView;","import { makeAutoObservable } from \"mobx\";\r\n\r\nclass TimerLogic {\r\n  secondsPassed = 0;\r\n  outOfTime = false;\r\n  testNumer= 2;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  increaseTimer() {\r\n    this.secondsPassed += 1;\r\n  }\r\n\r\n  decreaseTimer() {\r\n    this.secondsPassed -= 1;\r\n    if(this.secondsPassed<=20){\r\n      this.outOfTime = true;\r\n      this.testNumber = 5;\r\n    }\r\n  }\r\n\r\n  startIncTimer() {\r\n    setInterval(() => {\r\n      this.increaseTimer();\r\n    }, 1000);\r\n  }\r\n\r\n  startDecTimer() {\r\n    setInterval(() => {\r\n      this.decreaseTimer();\r\n    }, 1000);\r\n  }\r\n}\r\n\r\nexport default TimerLogic;","import React, { Component } from \"react\";\r\nimport {  BrowserRouter,\r\n          Routes,\r\n          Route \r\n          } from \"react-router-dom\";\r\nimport \"../App.css\";\r\nimport LevelBuilder from \"../components/LevelBuilder\";\r\nimport LoseScreen from \"../components/LoseScreen\";\r\nimport WinScreen from \"../components/WinScreen\";\r\nimport Menu from \"../components/Menu\";\r\nimport QuizDataService from \"../components/quiz.service\";\r\n\r\nvar birdsLevel1; //in json\r\n\r\nvar birdsLevel2;\r\n\r\nvar birdsLevel3;  // in db\r\n\r\nvar numberOfTotalLevels = 3;\r\n\r\nfunction loadJSON(file, callback) {\r\n  var xobj = new XMLHttpRequest();\r\n  xobj.overrideMimeType(\"application/json\");\r\n  xobj.open(\"GET\", file, true);\r\n  xobj.onreadystatechange = function () {\r\n    if (xobj.readyState == 4 && xobj.status == \"200\") {\r\n      // Required use of an anonymous callback as .open will NOT return a value but simply returns undefined in asynchronous mode\r\n      callback(xobj.responseText);\r\n    }\r\n  };\r\n  xobj.send(null);\r\n}\r\n\r\n\r\nclass QuizPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      birdList: [],\r\n\r\n      guessedBirdsList: [],\r\n\r\n      level1ErrorMessage: \"\",\r\n      level2ErrorMessage: \"\",\r\n      level3ErrorMessage: \"\",\r\n\r\n      currentLevel: 0,\r\n      playerOutOfHearts: false,\r\n      playerOutOfTime: false,\r\n      reasonForLoss: 0,\r\n      playerGuessedAllBirds: false,\r\n\r\n      lreason : \"\",\r\n      appTitle: \"Vogelquiz\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    console.log(\"App.render() being invoked\");\r\n\r\n    if (\r\n      this.state.currentLevel > 0 &&\r\n      this.state.playerOutOfHearts == false &&\r\n      this.state.playerGuessedAllBirds == false\r\n    ) {\r\n      return (\r\n        <div>\r\n          <h1 id=\"appTitle\">{this.props.title}</h1>\r\n\r\n          <LevelBuilder\r\n            currentBirdList={this.state.birdList}\r\n            currentLevel={this.state.currentLevel}\r\n            //notifyLoss={() => this.playerRanOutOfHearts()}\r\n             //notifyLossOfTimeout={() => this.playerRanOutOfTime()}\r\n            setReasonForLoss = {this.setLossData.bind(this)}\r\n            notifyWin={() => this.playerHasWon()}\r\n            goToMenu={() => this.currentLevelToZero()}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    if (this.state.currentLevel > 0 && this.state.playerOutOfHearts == true && this.state.playerGuessedAllBirds != true) {\r\n      return (\r\n        <div>\r\n\r\n          <h1 id=\"appTitle\">{this.props.title}</h1>\r\n\r\n          <LoseScreen\r\n            currentLevel={this.state.currentLevel}\r\n            restartCurrentLevel={() => this.restartLevel()}\r\n            goToMenu={() => this.currentLevelToZero()}\r\n            reasonForLoss={this.state.reasonForLoss}\r\n          />\r\n\r\n        </div>\r\n      );\r\n    }\r\n    if (\r\n      this.state.currentLevel > 0 &&\r\n      this.state.playerGuessedAllBirds == true\r\n    ) {\r\n      return (\r\n        <div>\r\n          <h1 id=\"appTitle\">{this.props.title}</h1>\r\n\r\n          <WinScreen\r\n            currentLevel={this.state.currentLevel}\r\n            startNextLevel={() =>\r\n              this.setCurrentLevel(parseInt(this.state.currentLevel) + 1)\r\n            }\r\n            goToMenu={() => this.currentLevelToZero()}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n\r\n\r\n        <div>\r\n          <Menu\r\n            errorMessage1={this.state.level1ErrorMessage}\r\n            errorMessage2={this.state.level2ErrorMessage}\r\n            errorMessage3={this.state.level3ErrorMessage}\r\n            appTitle={this.state.appTitle}\r\n            onButtonPress={(chosenLevel) => this.setCurrentLevel(chosenLevel)}\r\n          />\r\n        </div>\r\n\r\n\r\n      );\r\n    }\r\n  }\r\n\r\nsetLossData(lossReason){\r\n\r\n  if(lossReason==\"Out of Time\"){\r\n    this.setState({\r\n      reasonForLoss: 0\r\n    })\r\n  }\r\n  else{\r\n    this.setState({\r\n      reasonForLoss: 1\r\n    }) \r\n  }\r\n  this.setState({\r\n    playerOutOfHearts: true,\r\n  });\r\n}\r\n\r\n  playerRanOutOfHearts(myreasonForLoss) {\r\n    if(myreasonForLoss==\"Timeout\"){\r\n      this.setState({\r\n        reasonForLoss: 0\r\n      })\r\n    }\r\n    else{\r\n      this.setState({\r\n        reasonForLoss: 1\r\n      })  \r\n    }\r\n    this.setState({\r\n      playerOutOfHearts: true,\r\n    });\r\n  }\r\n  playerHasWon() {\r\n    this.setState({\r\n      playerGuessedAllBirds: true,\r\n    });\r\n  }\r\n\r\n  setCurrentLevel(levelNum) {\r\n    var myBirdList = [];\r\n    if (levelNum == 1) {\r\n      myBirdList = birdsLevel1;\r\n    }\r\n    if (levelNum == 2) {\r\n      myBirdList = birdsLevel2;\r\n    }\r\n    if (levelNum == 3) {\r\n      myBirdList = birdsLevel3;\r\n    }\r\n    if (levelNum > 3) {\r\n      myBirdList = birdsLevel1;\r\n      levelNum = 0;\r\n    }\r\n\r\n    this.fillLevel(myBirdList, levelNum);\r\n  }\r\n\r\n  restartLevel() {\r\n    this.fillLevel(this.state.birdList, this.state.currentLevel);\r\n  }\r\n\r\n  startNextLevel() {\r\n    let thisLevel = this.state.currentLevel;\r\n    let maxLevel = numberOfTotalLevels;\r\n    if (thisLevel < maxLevel) {\r\n      this.setCurrentLevel(parseInt(thisLevel) + 1);\r\n    }\r\n  }\r\n\r\n  fillLevel(contentForBirdList, numberOfLevel) {\r\n    this.setState({\r\n      birdList: contentForBirdList,\r\n    });\r\n\r\n    this.setState({\r\n      currentLevel: numberOfLevel,\r\n    });\r\n\r\n    this.setState({\r\n      playerOutOfHearts: false,\r\n    });\r\n    this.setState({\r\n      playerGuessedAllBirds: false,\r\n    });\r\n  }\r\n\r\n  currentLevelToZero() {\r\n    this.setState({\r\n      currentLevel: 0,\r\n    });\r\n  }\r\n\r\n  /***************************************************************************************************************\r\n   *   Being invoked before this component has been mounted.\r\n   ***************************************************************************************************************/\r\n  componentWillMount() {\r\n    console.log(\"JSON File einlesen:\");\r\n\r\n    loadJSON(\r\n      \"levelOne.json\",\r\n      function (\r\n        text // in text zurück\r\n      ) {\r\n        console.log(\"JSON:\" + text);\r\n        birdsLevel1 = JSON.parse(text); // text -> object quizfragen\r\n        console.log(birdsLevel1);\r\n      }\r\n    );\r\n\r\n    loadJSON(\r\n      \"levelTwo.json\",\r\n      function (\r\n        text // in text zurück\r\n      ) {\r\n        birdsLevel2 = JSON.parse(text); // text -> object quizfragen\r\n        console.log(birdsLevel2);\r\n      }\r\n    );\r\n\r\n    // now filled by db\r\n    /*\r\n    loadJSON(\r\n      \"levelThree.json\",\r\n      function (\r\n        text // in text zurück\r\n      ) {\r\n        birdsLevel3 = JSON.parse(text);\r\n      }\r\n    );\r\n    */\r\n  }\r\n\r\n  /***************************************************************************************************************\r\n   *   Being invoked after this component has been mounted.\r\n   ***************************************************************************************************************/\r\n  componentDidMount() {\r\n    console.log(\"App.componentDidMount) being invoked\");\r\n\r\n      // load birdsLevel3 fron db\r\n      QuizDataService.getAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        birdsLevel3 = response.data;\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n        this.setState({\r\n          level3ErrorMessage: \"DB Service not available\"\r\n        });\r\n\r\n      });\r\n  }\r\n\r\n  \r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n    console.log(\"App.componentWillUpdate() being invoked\");\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n    console.log(\"App.componentWillReceiveProps() being invoked\");\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"App.componentDidUpdate() being invoked\");\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"App.componentWillUnmount() being invoked\");\r\n  }\r\n}\r\nexport default QuizPage;","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport LifeDisplay from \"./LifeDisplay\";\nimport Images from \"./Images\";\nimport SkipButton from \"./SkipButton\";\nimport FeedbackLine from \"./FeedbackLine\";\nimport ButtonList from \"./ButtonList\";\nimport GuessedBirds from \"./GuessedBirds\";\nimport Button from \"react-bootstrap/Button\";\n\n//  mobx Timer Zeug\nimport { observer } from \"mobx-react\"\nimport TimerView from \"./TimerView\";\n\n\n\n\nvar emptyList = [];\n\nvar livesAtStart = 6;\n\nclass LevelBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      birdList: [],\n\n      guessedBirdsList: [],\n\n      currentImageIndex: 0,\n      numberOfLives: 5,\n      currentLevel: 1,\n      userFeedback: \"Welcher Vogel ist hier dargestellt?\",\n      reasonForLoss: \"No Hearts\",\n\n      secondsOnTimer: 300,\n    };\n  }\n\n  render() {\n    console.log(\"LevelBuilder.render() being invoked\");\n\n    return (\n      <div className=\"text-center\">\n\n        <br></br>\n        <p className=\"Handwritten\">Level {this.props.currentLevel}</p>\n\n        <div>\n          <TimerView\n            secondsPassed={this.state.secondsOnTimer}\n            notifyTimeout={() => this.triggerTimeout()}\n          />\n        </div>\n\n        <div className=\"container col-6\">\n          <LifeDisplay lifeCounter={this.state.numberOfLives} />\n        </div>\n\n        <div className=\"container col-12 text-center\">\n          <SkipButton\n            indexToSkip={this.state.currentImageIndex}\n            onButtonPress={() => this.chooseNewRandomImage()}\n          />\n\n          <Button\n            onClick={() => { this.props.goToMenu(); }}\n            className=\"btn-dark btn-sm mx-2\"\n          >\n            Level abbrechen\n          </Button>\n\n          <FeedbackLine\n            className=\"col-2\"\n            feedbackText={this.state.userFeedback} />\n        </div>\n        <div className=\"container col-md-6 col-lg-6 col-xl-6 mx-auto\">\n          <Images\n            imageIndex={this.state.currentImageIndex}\n            imageList={this.state.birdList}\n          />\n        </div>\n\n\n        <ButtonList\n          onButtonPress={(buttonIndex) => this.checkAnswer(buttonIndex)}\n          buttonIds={this.state.birdList}\n        />\n\n        <GuessedBirds birdList={this.state.guessedBirdsList} />\n      </div>\n    );\n  }\n\n\n\n  checkAnswer(theButtonIndex) {\n\n    if (theButtonIndex === this.state.currentImageIndex) {\n      //anser correct\n      this.addObjectToGuessedBirdsList(this.state.birdList[theButtonIndex]);\n      this.removeObjectFromBirdList(theButtonIndex);\n      this.chooseNewRandomImage();\n      this.state.userFeedback = this.state.birdList[theButtonIndex].text + \" war Richtig! Und weiter geht's ...\";\n    } //answer wrong\n    else {\n      this.subtractOneLife();\n      this.state.userFeedback = \"Falsch! Dieser Vogel ist kein(e) \" + this.state.birdList[theButtonIndex].text + \"!\";\n    }\n\n  }\n\n  endLevel(reason) {\n    this.props.setReasonForLoss(reason);\n  }\n\n  subtractOneLife() {\n    let newNumber = this.state.numberOfLives - 1;\n    if (newNumber >= 0) {\n      this.setState({\n        numberOfLives: newNumber,\n      });\n    }\n    if (this.state.numberOfLives <= 1) {\n      this.setState({\n        reasonForLoss: \"Out of Hearts\"\n      })\n      this.endLevel(\"Out of Hearts\");\n    }\n  }\n\n  setLivesToZero() {\n    this.setState({\n      numberOfLives: 0,\n    });\n    //this.props.setReasonForLoss(\"Timeout\");\n  }\n\n  triggerTimeout() {\n    this.setState({\n      reasonForLoss: \"Out of Time\",\n    });\n    this.endLevel(\"Out of Time\");\n  }\n\n\n\n  chooseNewRandomImage() {\n    let maxIndex = this.state.birdList.length - 1;\n    let randomNum = this.randomIntInc(0, maxIndex) - 1;\n    if (randomNum > maxIndex || randomNum < 0) {\n      randomNum = 0;\n    }\n    this.setState({\n      currentImageIndex: randomNum,\n    });\n  }\n\n  chooseNewRandomImageExclude(excludedNum) {\n    let maxIndex = this.state.birdList.length - 1;\n    let randomNum = this.randomIntInc(0, maxIndex) - 1;\n    if (randomNum > maxIndex || randomNum < 0 || randomNum == excludedNum) {\n      randomNum = 0;\n    }\n    this.setState({\n      currentImageIndex: randomNum,\n    });\n  }\n\n  randomIntInc(low, high) {\n    return Math.floor(Math.random() * (high - low + 1) + low);\n  }\n\n  removeObjectFromBirdList(theButtonIndex) {\n    // copy original array\n    let newbirdList = this.state.birdList.slice();\n    newbirdList.splice(theButtonIndex, 1);\n\n    // set new state forcing the component to re-render\n    this.setState({\n      birdList: newbirdList,\n    });\n  }\n\n  addObjectToGuessedBirdsList(birdObject) {\n    let newGuessedBirdsList = this.state.guessedBirdsList.slice();\n    newGuessedBirdsList.push(birdObject);\n    this.setState({\n      guessedBirdsList: newGuessedBirdsList,\n    });\n  }\n\n  fillLevel(contentForBirdList, numberOfHearts) {\n    console.log(\"App.componentWillMount() being invoked\");\n\n    this.setState({\n      birdList: contentForBirdList,\n    });\n\n    this.setState({\n      numberOfLives: numberOfHearts,\n    });\n    var newGuessedBirdsList = emptyList.slice();\n    this.setState({\n      guessedBirdsList: newGuessedBirdsList,\n    });\n  }\n\n  componentWillMount() {\n    var numberOfLives = livesAtStart;\n    var myList = this.props.currentBirdList;\n\n    this.fillLevel(myList, numberOfLives);\n\n\n  }\n\n  componentDidMount() {\n    console.log(\"App.componentDidMount() being invoked\");\n\n  }\n\n  componentWillUpdate(nextProps, nextState, nextContext) {\n    console.log(\"App.componentWillUpdate() being invoked\");\n  }\n\n  componentDidUpdate() {\n    console.log(\"App.componentDidUpdate() being invoked\");\n    if (this.state.numberOfLives == 0) {\n      //this.props.notifyLoss();\n    }\n    if (this.state.birdList.length == 0) {\n      this.props.notifyWin();\n    }\n  }\n}\nexport default LevelBuilder;\n","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport ImageView from \"./ImageView\";\n\n\n\nclass LoseScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imagePath: \"./images/ui_elements/Stopwatch.png\",\n            loseMessage: \"Verloren\"\n\n        }\n\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"container col-12 text-center\">\n                <div className=\"col-md-6 mx-auto\">\n                    <ImageView path={this.state.imagePath} />\n                </div>\n                <h2 className=\"text-center\">{this.state.loseMessage}</h2>\n                <div className=\"text-center\">\n                    <Button\n                        onClick={() => { this.props.restartCurrentLevel(); }}\n                        className=\"button mx-2 btn-dark\"\n                    >\n                        Erneut versuchen\n                    </Button>\n\n                    <Button\n                        onClick={() => { this.props.goToMenu(); }}\n                        className=\"button mx-2 btn-dark\"\n                    >\n                        Zurück zum Menü\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n    componentDidMount() {\n        if (this.props.reasonForLoss == 0) {\n            this.setState({\n                loseMessage: \"Du hast keine Zeit mehr.\",\n                imagePath: \"./images/ui_elements/Stopwatch.png\"\n            });\n        }\n        else {\n            this.setState({\n                loseMessage: \"Du hast keine Leben mehr.\",\n                imagePath: \"./images/ui_elements/Heart_broken.png\"\n            });\n        }\n    }\n}\nexport default LoseScreen;\n","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport ImageView from \"./ImageView\";\n\nclass WinScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n\n    }\n\n    render() {\n\n        return <div className=\"text-center\">\n            <div className=\"col-md-6 mx-auto\">\n                    <ImageView path=\"./images/ui_elements/Vogel.png\" />\n                </div>\n            <h2>Du hast alle Vögel richtig erkannt!</h2>\n            <Button\n                onClick={() => { this.props.startNextLevel(); }}\n                className=\"button btn-dark mx-2\"\n            >\n                nächstes Level\n            </Button>\n\n            <Button\n                onClick={() => { this.props.goToMenu(); }}\n                className=\"button btn-dark mx-2\"\n            >\n                Menü\n            </Button>\n        </div>;\n    }\n\n}\nexport default WinScreen;\n","import React, { Component } from \"react\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Stack from \"react-bootstrap/Stack\";\r\n\r\nimport ImageView from \"./ImageView\";\r\n\r\n\r\nclass LevelSelectionPreview extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: \"\"\r\n    };\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div class=\"mb-5\">\r\n\r\n\r\n        <div class=\"mb-3\">\r\n          <ImageView\r\n            path={this.props.imagePath} />\r\n        </div>\r\n\r\n\r\n        <div className=\"pull-left\">\r\n\r\n          <p className=\"pull-left\">{this.props.description}</p>\r\n        </div>\r\n\r\n        <div>\r\n          <Button\r\n            onClick={() => {\r\n              this.props.onButtonPress(this.props.levelNumber);\r\n            }}\r\n            className=\"button btn-dark col-4\" disabled={this.props.errorMessage.length>0}\r\n          >\r\n            Level {this.props.levelNumber} \r\n          </Button>\r\n            <p className=\"small text-danger\">{this.props.errorMessage}</p>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\nexport default LevelSelectionPreview;\r\n","import React, { Component } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport LevelSelectionPreview from \"./LevelSelectionPreview\"\n\nimport \"../App.css\";\nimport \"../index.css\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Stack from \"react-bootstrap/Stack\";\nimport Container from \"react-bootstrap/Container\";\n\nimport ImageView from \"./ImageView\";\n\n\nclass Menu extends React.Component\n{\n    constructor( props )\n    {\n        super( props );\n        this.state = {\n          errMsg1: \"\",\n          errMsg2: \"\",\n          errMsg3: \"\"              \n        }\n        \n    }\n    \n    render()\n    {\n        return (\n          <div class=\"text-center mb-2\">\n\n            <div class=\"col my-5\">\n\n            <p className=\"Handwritten\">{this.props.appTitle}</p>\n\n            <p className=\"NormalText\">\n              Wähle ein Level und teste dein Wissen über verschiedene Vögel rund\n              um den Globus. Viel Spaß!\n            </p>\n            </div>\n\n            <LevelSelectionPreview \n            levelNumber=\"1\"\n            errorMessage={this.props.errorMessage1}\n            imagePath=\"./images/level_banner/Banner_Deutschland.png\"\n            description=\"Amsel, Drossel, Fink und Star - Kennst du die ganze Vogelschar? Im ersten Level geht es darum, die häufigsten Vögel aus Deutschland zu erkennen. Von der kleinen Bachstelze bis zum großen Storch; ist die Vogelwelt nicht vielfältig?\"\n            onButtonPress={this.props.onButtonPress}/>\n\n            <LevelSelectionPreview \n            levelNumber={2}\n            errorMessage={this.props.errorMessage2}\n            imagePath=\"./images/level_banner/Banner_Regenwald.png\"\n            description=\"Die tropischen Regenwälder sind bekannt für ihre Vielfalt an bunt schimmernden Gestalten, ob Insekten, Amphibien, oder auch Säugetiere. Hier sind natürlich die Vögel interessant, und auch hier fehlt es nicht an ausgefallenen Farben und Formen.\"\n            onButtonPress={this.props.onButtonPress}/>  \n\n            <LevelSelectionPreview \n            levelNumber={3}\n            errorMessage={this.props.errorMessage3}\n            imagePath=\"./images/level_banner/Banner_Antarktis.png\"\n            description=\"Kalt und trostlos wird es ab dem 60. südlichen Breitengrad. Doch davon lassen sich unsere gefiederten Freunde nicht abhalten. Nur 35 Vogelarten brüten in der Antarktis, doch zu finden sind zwischen den kalten Klippen und Eisbergen weitaus mehr Arten.\"\n            onButtonPress={this.props.onButtonPress}/>  \n\n            <Link to='/edit' claaName=\"linkPath\">\n              Level bearbeiten\n            </Link>\n           \n          </div>\n        );\n    }\n\n    componentDidMount() {\n\n      this.setState({\n        errMsg3: this.props.errorMessage3\n      })\n  \n    }\n\n}\nexport default Menu;\n\n ","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"../http-common\";\n\nclass QuizDataService {\n  getAll() {\n    return http.get(\"/quizes\");\n  }\n\n  // user/passwort\n  getUser(userName) {\n    return http.get(`/quizes/user/${userName}`);\n  }\n\n  get(id) {\n    return http.get(`/quizes/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/quizes\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/quizes/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/quizes/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/quizes`);\n  }\n\n  findByTitle(title) {\n    return http.get(`/quizes?title=${title}`);\n  }\n}\n\nexport default new QuizDataService();","import http from \"../http-common\";\n\nclass QuizDataService {\n  getAll() {\n    return http.get(\"/quizes\");\n  }\n\n  // user password\n  getUser(userName) {\n    return http.get(`/quizes/user/${userName}`);\n  }\n\n  get(id) {\n    return http.get(`/quizes/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/quizes\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/quizes/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/quizes/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/quizes`);\n  }\n\n  findByTitle(title) {\n    return http.get(`/quizes?title=${title}`);\n  }\n}\n\nexport default new QuizDataService();","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport QuizDataService from \"../services/quiz.service\";\r\n\r\n\r\n\r\n\r\n\r\nclass EditPageOverview extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.doLogin = this.doLogin.bind(this);\r\n\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loginDone: 0,\r\n      errorMessage: \"\"\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.state.loginDone == 0) {\r\n      return (\r\n        <div>\r\n          <br></br>\r\n          <h1>Bitte einloggen</h1>\r\n          <div className=\"form-group my-3\">\r\n            <label htmlFor=\"text\">Unsername</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"username\"\r\n              required\r\n              value={this.state.username}\r\n              onChange={this.onChangeUsername}\r\n              name=\"username\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group my-3\">\r\n            <label htmlFor=\"path\">Passwort</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"password\"\r\n              required\r\n              value={this.state.password}\r\n              onChange={this.onChangePassword}\r\n              name=\"password\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <button onClick={this.doLogin} className=\"btn btn-dark\">\r\n              Login\r\n            </button>\r\n\r\n            <Link\r\n              className=\"btn btn-dark mx-3\"\r\n              role=\"button\"\r\n              to=\"/\"\r\n            >\r\n              abbrechen\r\n            </Link>\r\n\r\n          </div>\r\n          <p className=\"mt-3 text-danger\">{this.state.errorMessage}</p>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"text-center\">\r\n          <br></br>\r\n          <h1>Level Editor</h1>\r\n          <div className=\"my-3\">\r\n            <Button className=\"btn-dark\">Level 1 bearbeiten</Button>\r\n          </div>\r\n          <div className=\"my-3\">\r\n            <Button className=\"btn-dark\">Level 2 bearbeiten</Button>\r\n          </div>\r\n          <div className=\"my-3\">\r\n            <Link\r\n              className=\"btn btn-dark\"\r\n              role=\"button\"\r\n              to='/editlvl'>\r\n              Level 3 bearbeiten\r\n            </Link>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      );\r\n    };\r\n  }\r\n\r\n\r\n\r\n\r\n  /*handleClick(path){\r\n    const history = useHistory();\r\n    history.push(path);\r\n  }*/\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  doLogin() {\r\n\r\n    // hole passwort zu userName von Server\r\n    // userName,passwort eingegebenn im Formular\r\n    const user_name = this.state.username;\r\n    QuizDataService.getUser(this.state.username)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        if (response.data.password == this.state.password) {\r\n          console.log(\"**Login OK!\");\r\n          this.setState({\r\n            loginDone: 1\r\n          });\r\n          //alert(\"Logged in\");\r\n        }\r\n        else {\r\n          // User / Password does not fit\r\n          this.setState({\r\n            errorMessage: \"User / Password Fehler!\"\r\n          });\r\n\r\n        }\r\n\r\n      })\r\n      .catch(e => {\r\n        console.log(\"Login Fehler\");\r\n        console.log(e);\r\n        this.setState({\r\n          errorMessage: \"Quiz DB Server nicht verfügbar! \"\r\n        });\r\n        // und noch button deaktivieren\r\n      });\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"App.componentDidMount) being invoked\");\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default EditPageOverview;","import React, { Component } from \"react\";\r\nimport QuizDataService from \"../services/quiz.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ImageView from \"../components/ImageView\";\r\n\r\nexport default class QuizesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\r\n    this.retrieveQuizes = this.retrieveQuizes.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveQuiz = this.setActiveQuiz.bind(this);\r\n    this.removeQuiz = this.removeQuiz.bind(this);\r\n    this.removeAllQuizes = this.removeAllQuizes.bind(this);\r\n    this.searchTitle = this.searchTitle.bind(this);\r\n\r\n    this.state = {\r\n      quizes: [],\r\n      currentQuiz: null,\r\n      currentIndex: -1,\r\n      searchTitle: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveQuizes();\r\n  }\r\n\r\n  onChangeSearchTitle(e) {\r\n    const searchTitle = e.target.value;\r\n\r\n    this.setState({\r\n      searchTitle: searchTitle\r\n    });\r\n  }\r\n\r\n  retrieveQuizes() {\r\n    QuizDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          quizes: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveQuizes();\r\n    this.setState({\r\n      currentQuiz: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveQuiz(quiz, index) {\r\n    this.setState({\r\n      currentQuiz: quiz,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  removeQuiz() {\r\n    QuizDataService.delete(this.state.currentQuiz.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  removeAllQuizes() {\r\n    QuizDataService.deleteAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  searchTitle() {\r\n    this.setState({\r\n      currentQuiz: null,\r\n      currentIndex: -1\r\n    });\r\n\r\n    QuizDataService.findByTitle(this.state.searchTitle)\r\n      .then(response => {\r\n        this.setState({\r\n          quizes: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { searchTitle, quizes, currentQuiz, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"col-md-12\">\r\n          <br></br>\r\n          <div className=\"input-group mb-5\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Eintrag Suchen\"\r\n              value={searchTitle}\r\n              onChange={this.onChangeSearchTitle}\r\n            />\r\n\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-dark\"\r\n                type=\"button\"\r\n                onClick={this.searchTitle}\r\n              >\r\n                Suchen\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n          <h4 className=\"text-center\">Eingetragene Vögel</h4>\r\n          <ul className=\"list-group mt-3\">\r\n            {quizes &&\r\n              quizes.map((quiz, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveQuiz(quiz, index)}\r\n                  key={index}\r\n                >\r\n                  {quiz.title}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          <div className=\"col-12\">\r\n\r\n            <Link\r\n              className=\"btn btn-sm btn-dark\"\r\n              role=\"button\"\r\n              to='/add-entry'\r\n            >\r\n              Neuen Vogel hinzufügen\r\n            </Link>\r\n\r\n            <button\r\n              className=\"m-3 btn btn-sm btn-dark\"\r\n              onClick={this.removeQuiz}\r\n            >\r\n              Eintrag löschen\r\n            </button>\r\n\r\n\r\n            <button\r\n              className=\"btn btn-sm btn-danger\"\r\n              onClick={this.removeAllQuizes}\r\n            >\r\n              alle Einträge löschen\r\n            </button>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"mt-5\">\r\n          {currentQuiz ? (\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <ImageView path={currentQuiz.path} />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div>\r\n                  <label>\r\n                    <strong>Vogelname:</strong>\r\n                  </label>{\" \"}\r\n                  {currentQuiz.text}\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    <strong>wissenschaftlicher Name:</strong>\r\n                  </label>{\" \"}\r\n                  {currentQuiz.title}\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    <strong>Beschreibung:</strong>\r\n                  </label>{\" \"}\r\n                  {currentQuiz.description}\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    <strong>Bild:</strong>\r\n                  </label>{\" \"}\r\n                  {currentQuiz.path}\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"text-center col-12 mt-5 mb-3\">\r\n          <Link to=\"/\">zurück zum Menü</Link>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport QuizDataService from \"../services/quiz.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class AddQuiz extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.onChangePath = this.onChangePath.bind(this);\r\n    this.saveQuiz = this.saveQuiz.bind(this);\r\n    this.newQuiz = this.newQuiz.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      title: \"\",\r\n      description: \"\",\r\n      text: \"\",\r\n      path: \"\",\r\n      published: false,\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({\r\n      title: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeText(e) {\r\n    this.setState({\r\n      text: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePath(e) {\r\n    this.setState({\r\n      path: e.target.value\r\n    });\r\n  }\r\n\r\n  saveQuiz() {\r\n    var data = {\r\n      title: this.state.title,\r\n      description: this.state.description,\r\n      text: this.state.text,\r\n      path: this.state.path,\r\n    };\r\n\r\n    QuizDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          title: response.data.title,\r\n          description: response.data.description,\r\n          text: response.data.text,\r\n          path: response.data.path,\r\n          published: response.data.published,\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newQuiz() {\r\n    this.setState({\r\n      id: null,\r\n      text: \"\",\r\n      title: \"\",\r\n      description: \"\",\r\n      path: \"\",\r\n      published: false,\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form text-center\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <br></br>\r\n            <h4>Der Vogel wurde hinzugefügt!</h4>\r\n            <button className=\"btn btn-dark mx-2\" onClick={this.newQuiz}>\r\n              weiterer Eintrag\r\n            </button>\r\n            <Link className=\"btn btn-dark mx-2\" to=\"/editlvl\">\r\n              Übersicht\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group my-3\">\r\n              <label htmlFor=\"text\">Vogelname</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"text\"\r\n                required\r\n                value={this.state.text}\r\n                onChange={this.onChangeText}\r\n                name=\"text\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group my-3\">\r\n              <label htmlFor=\"title\">wissenschaftlicher Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"title\"\r\n                required\r\n                value={this.state.title}\r\n                onChange={this.onChangeTitle}\r\n                name=\"title\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group my-3\">\r\n              <label htmlFor=\"description\">Beschreibung</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                required\r\n                value={this.state.description}\r\n                onChange={this.onChangeDescription}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group my-3\">\r\n              <label htmlFor=\"path\">Pfad zum Bild</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"path\"\r\n                required\r\n                value={this.state.path}\r\n                onChange={this.onChangePath}\r\n                name=\"text\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <button onClick={this.saveQuiz} className=\"btn btn-dark mx-2\">\r\n                Eintrag erstellen\r\n              </button>\r\n\r\n              <Link\r\n                className=\"btn btn-dark mx-2\"\r\n                role=\"button\"\r\n                to='/editlvl'\r\n              >\r\n                abbrechen\r\n              </Link>\r\n            </div>\r\n\r\n\r\n\r\n\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport QuizPage from \"./pages/QuizPage\";\nimport EditPageOverview from \"./pages/EditPageOverview\";\nimport EditLevel from \"./pages/EditLevel\";\nimport AddEntry from \"./pages/AddEntry\";\n\n\n\nfunction App()  {\n\n  \n\n\n    return(\n\n      <div className=\"col-xl-6 col-lg-8 col-md-10 mx-auto\">\n        <Switch>\n          <Route path='/' exact>\n            <QuizPage/>\n          </Route>\n\n          <Route path='/editlvl' exact>\n            <EditLevel/>\n          </Route>\n\n          <Route path='/add-entry' exact>\n            <AddEntry/>\n          </Route>\n\n          <Route>\n            <EditPageOverview path='/edit' exact/>\n          </Route>\n        </Switch>\n      </div>\n\n    );\n\n\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  \n    <HashRouter>\n      <App />\n    </HashRouter>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}